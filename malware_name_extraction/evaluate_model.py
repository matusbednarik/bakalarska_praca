
import spacy
from spacy.tokens import DocBin
from spacy.training import Example
from spacy.scorer import Scorer

def main():
    model_path = "C:/Users/HP/Documents/bakalarka/malware_name_extraction/output/model-best"
    test_path = "C:/Users/HP/Documents/bakalarka/malware_name_extraction/malware_test.spacy"

    # Load model and test data
    nlp = spacy.load(model_path)
    doc_bin = DocBin().from_disk(test_path)
    gold_docs = list(doc_bin.get_docs(nlp.vocab))

    # Create examples
    examples = []
    for gold_doc in gold_docs:
        pred_doc = nlp(gold_doc.text)
        examples.append(Example(gold_doc, pred_doc))

    scorer = Scorer()
    scores = scorer.score(examples)

    print("=== ENTITY RECOGNITION EVALUATION ===")
    print(f"Total examples: {len(examples)}")
    print(f"Total gold entities: {sum(len(ex.reference.ents) for ex in examples)}")
    print(f"Total predicted entities: {sum(len(ex.predicted.ents) for ex in examples)}")
    
    print(f"\nScorer Results:")
    print(f"Precision: {scores['ents_p']:.4f}")
    print(f"Recall:    {scores['ents_r']:.4f}")
    print(f"F1:        {scores['ents_f']:.4f}")

    # Manual exact-match counting for comparison
    exact_tp = exact_fp = exact_fn = 0
    
    for example in examples:
        gold_ents = {(ent.start_char, ent.end_char, ent.label_) for ent in example.reference.ents}
        pred_ents = {(ent.start_char, ent.end_char, ent.label_) for ent in example.predicted.ents}
        
        exact_tp += len(gold_ents & pred_ents)
        exact_fp += len(pred_ents - gold_ents)
        exact_fn += len(gold_ents - pred_ents)

    exact_precision = exact_tp / (exact_tp + exact_fp) if (exact_tp + exact_fp) > 0 else 0
    exact_recall = exact_tp / (exact_tp + exact_fn) if (exact_tp + exact_fn) > 0 else 0
    exact_f1 = 2 * exact_precision * exact_recall / (exact_precision + exact_recall) if (exact_precision + exact_recall) > 0 else 0

    print(f"\nExact Match Counting:")
    print(f"TP: {exact_tp}, FP: {exact_fp}, FN: {exact_fn}")
    print(f"Precision: {exact_precision:.4f}")
    print(f"Recall:    {exact_recall:.4f}")
    print(f"F1:        {exact_f1:.4f}")

    print(f"\n=== SAMPLE PREDICTIONS ===")
    for i, example in enumerate(examples[:3]):
        print(f"\nExample {i+1}: {example.predicted.text[:150]}...")
        print("Gold:", [(ent.text, ent.label_) for ent in example.reference.ents])
        print("Pred:", [(ent.text, ent.label_) for ent in example.predicted.ents])

if __name__ == "__main__":
    main()